# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  
env:
  S3_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
  application: ${{ secrets.APPLICATION }}

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ./back/
    
    - name: Build with Gradle
      run: ./gradlew build
      working-directory: ./back/
        
    - name: Setup Node.js environment
      uses: actions/setup-node@v3.4.1
      with:
        node-version: '16.17.0'
        
    - name: create .env
      run: touch ./front/.env
      
    - name: write env
      run: echo REACT_APP_BASE_URL = http://localhost:8080 > ./front/.env
        
    - name: npm install
      run: npm install
      working-directory: ./front/
    
    - name: npm build
      run: npm run build
      working-directory: ./front/
    
    - name: Make zip file
      run: zip -r ./full-deploy.zip .
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2
        
    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./full-deploy.zip s3://$S3_BUCKET_NAME/full-deploy.zip

    - name: Code Deploy
      run: >
        aws deploy create-deployment --application-name parking-go
        --deployment-config-name CodeDeployDefault.AllAtOnce
        --deployment-group-name parking-go-deploy
        --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=full-deploy.zip
